{"version":3,"sources":["Components/QuoteCard.js","Components/ResultBar.js","Output.js","Components/TagSelect.js","input.js","background.jpg","Components/logo.png","Components/Logo.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteCard","props","useState","liked","setLike","infoIcon","xmlns","width","height","fill","class","viewBox","d","tags","Col","Row","likes","categories_list","categories","i","length","push","Badge","className","variant","Card","Body","Container","xs","quote","author","OverlayTrigger","trigger","placement","overlay","Popover","id","idx","Title","as","Content","n_likes","sentiment","similarity","searchInfo","wholesome","style","rank_score","toFixed","ResultBar","text","fontSize","emoji","Output","data","searchResult","cards","normalized_likes","Button","onClick","handleBack","TagSelect","options","require","value","selected","onChange","setSelected","labelledBy","Input","setText","setEmoji","setWholesome","Form","Group","controlId","Label","Control","rows","name","placeholder","target","Text","disabled","e","handleSubmit","map","item","Logo","src","logo","alt","App","queryString","isOutput","setOutput","setInfo","setResult","loading","setLoading","window","onload","location","hash","reload","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","href","type","color","query","stringify","console","log","fetch","then","response","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+nFAUe,SAASA,EAAUC,GAoEhC,IAnEA,MAAyBC,oBAAS,GAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EACJ,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,OACLC,MAAM,oBACNC,QAAQ,YANV,UAQE,sBAAMC,EAAE,0EACR,sBAAMA,EAAE,uPAqDNC,GAjDaV,GAChBW,EAAA,EACEC,EAAA,EAiBAA,EAAA,EAEId,EAAMe,QAKZF,EAAA,EACEC,EAAA,EAcAA,EAAA,EAEId,EAAMe,OAAQf,EAAMe,OAMhB,IACPC,EAAkBhB,EAAMiB,WACrBC,EAAI,EAAGA,EAAIF,EAAgBG,OAAQD,IAC1CN,EAAKQ,KACH,cAACC,EAAA,EAAD,CAAOC,UAAU,OAAOC,QAAQ,OAAhC,SACGP,EAAgBE,IADyBA,IAMhD,OACE,cAACM,EAAA,EAAD,CAAMF,UAAU,iBAAhB,SACE,cAACE,EAAA,EAAKC,KAAN,UACE,cAACC,EAAA,EAAD,UACE,eAACZ,EAAA,EAAD,WACE,eAACD,EAAA,EAAD,CAAKc,GAAI,GAAT,UACE,6BAAYL,UAAU,iBAAtB,UACE,8BACG,IADH,IACStB,EAAM4B,MADf,IACuB,OAEvB,wBAAQN,UAAU,oBAAlB,SAAuCtB,EAAM6B,YAE9CjB,KAEH,cAACC,EAAA,EAAD,CAAKS,UAAU,OAAOK,GAAI,EAA1B,SAEE,cAACb,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CACEC,QAAQ,QAERC,UAAW,QACXC,QACE,eAACC,EAAA,EAAD,CAASC,GAAE,6BAAwBnC,EAAMoC,KAAzC,UACE,cAACF,EAAA,EAAQG,MAAT,CAAeC,GAAG,KAAlB,0CAGA,eAACJ,EAAA,EAAQK,QAAT,yDAC8C,IAC5C,gIAFF,sNASoD,IAClD,2CAVF,oEAW+B,0CAX/B,IAWgD,uBAC9C,uDACCvC,EAAMwC,QACP,uBACA,gDACCxC,EAAMyC,UACP,uBACA,iDACCzC,EAAM0C,WACP,uBACA,2DACC1C,EAAM2C,WAAWC,UAClB,6BAhCR,SAqCE,oBAAGC,MAAO,CAAE,YAAa,OAAQ,cAAe,SAAhD,UACG,UAAY7C,EAAM8C,WAAWC,QAAQ,GADxC,IAC6C3C,MApCxCJ,EAAMoC,kB,MChEdY,MAlCf,SAAmBhD,GAEjB,IADA,IAAMY,EAAO,GACJM,EAAI,EAAGA,EAAIlB,EAAM2C,WAAW/B,KAAKO,OAAQD,IAChDN,EAAKQ,KACH,cAACC,EAAA,EAAD,CAAOC,UAAU,OAAOC,QAAQ,OAAhC,SACGvB,EAAM2C,WAAW/B,KAAKM,IADmBA,IAKhD,OACE,cAACQ,EAAA,EAAD,CAAWJ,UAAU,yBAAyBuB,MAAO,CAAEvC,MAAO,OAA9D,SACE,eAACQ,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,CAAKc,GAAI,EAAT,SACE,gDAEF,eAACd,EAAA,EAAD,CAAKc,GAAI,EAAT,UACE,cAACb,EAAA,EAAD,UACE,cAACD,EAAA,EAAD,UAAMb,EAAM2C,WAAWM,SAEzB,cAACnC,EAAA,EAAD,CAAKQ,UAAU,OAAf,SACE,cAACT,EAAA,EAAD,UACE,6BAAKD,WAKX,cAACC,EAAA,EAAD,CAAKc,GAAI,EAAT,SACE,oBAAGkB,MAAO,CAAEK,SAAU,OAAtB,UAAgClD,EAAM2C,WAAWQ,MAAjD,e,QCgBKC,MAzCf,SAAgBpD,GAGd,IAFA,IAAMqD,EAAOrD,EAAMsD,aACbC,EAAQ,GACLrC,EAAI,EAAGA,EAAImC,EAAKlC,OAAQD,IAC/BqC,EAAMnC,KACJ,cAACrB,EAAD,CAEE4C,WAAY3C,EAAM2C,WAClBf,MAAOyB,EAAKnC,GAAGU,MACfC,OAAQwB,EAAKnC,GAAGW,OAChBZ,WAAYoC,EAAKnC,GAAGN,KACpBG,MAAOsC,EAAKnC,GAAGH,MACf2B,WAAYW,EAAKnC,GAAGwB,WACpBD,UAAWY,EAAKnC,GAAGuB,UACnBK,WAAYO,EAAKnC,GAAG4B,WACpBN,QAASa,EAAKnC,GAAGsC,kBATZtC,IAcX,OACE,eAACQ,EAAA,EAAD,WACE,cAACZ,EAAA,EAAD,CAAKQ,UAAU,YAAf,SACE,cAAC,EAAD,CAAWqB,WAAY3C,EAAM2C,eAE/B,cAAC7B,EAAA,EAAD,UACE,cAAC2C,EAAA,EAAD,CACElC,QAAQ,gBACRD,UAAU,SACVoC,QAAS,kBAAM1D,EAAM2D,cAHvB,8BAQF,cAAC7C,EAAA,EAAD,CAAKQ,UAAU,MAAf,SACE,eAACT,EAAA,EAAD,WAAM0C,EAAN,a,gBCrBOK,MAnBf,SAAmB5D,GACjB,IACM6D,EADKC,EAAQ,IAGnB,OACE,gCACE,mBAAGxC,UAAU,OAAb,uDAGA,cAAC,IAAD,CACEuC,QAASA,EACTE,MAAO/D,EAAMgE,SACbC,SAAUjE,EAAMkE,YAChBC,WAAW,eCyHJC,MAlIf,SAAepE,GACb,MAAgCC,mBAAS,IAAzC,mBAAO+D,EAAP,KAAiBE,EAAjB,KACA,EAAwBjE,mBAAS,IAAjC,mBAAOgD,EAAP,KAAaoB,EAAb,KACA,EAA0BpE,mBAAS,IAAnC,mBAAOkD,EAAP,KAAcmB,EAAd,KACA,EAAkCrE,mBAAS,GAA3C,mBAAO2C,EAAP,KAAkB2B,EAAlB,KAEA,OACE,cAAC7C,EAAA,EAAD,CAAWJ,UAAU,QAArB,SACE,eAACkD,EAAA,EAAD,CAAMlD,UAAU,kBAAhB,UAEI,cAACR,EAAA,EAAD,CAAKQ,UAAU,UAAf,SACE,cAACT,EAAA,EAAD,UACE,eAAC2D,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,CAAYrD,UAAU,OAAtB,kCACA,cAACkD,EAAA,EAAKI,QAAN,CACEtC,GAAG,WACHuC,KAAM,EACNC,KAAK,eACLf,MAAOd,EACP8B,YAAY,yBACZd,SAAU,YAA4B,IAAfF,EAAc,EAAxBiB,OAAUjB,MACrBM,EAAQN,MAGZ,cAACS,EAAA,EAAKS,KAAN,CAAW3D,UAAU,aAArB,sEAON,cAACR,EAAA,EAAD,CAAKQ,UAAU,OAAf,SACE,cAACT,EAAA,EAAD,UACE,cAAC,EAAD,CAAWmD,SAAUA,EAAUE,YAAaA,QAIhD,cAACpD,EAAA,EAAD,CAAKQ,UAAU,UAAf,SACE,eAACT,EAAA,EAAD,WACE,cAAC2D,EAAA,EAAKC,MAAN,CAAYC,UAAU,YAAtB,SACE,mBAAGpD,UAAU,OAAb,SACG,kCAAoC6B,MAGzC,eAACrC,EAAA,EAAD,CAAKQ,UAAU,YAAf,UACE,cAACT,EAAA,EAAD,UACE,mBACES,UAAU,QACVoC,QAAS,WACPY,EAAS,gBACTC,EAAa,KAJjB,4BAUF,cAAC1D,EAAA,EAAD,UACE,mBACES,UAAU,QACVoC,QAAS,WACPY,EAAS,gBACTC,EAAa,KAJjB,4BAUF,cAAC1D,EAAA,EAAD,UACE,mBACES,UAAU,QACVoC,QAAS,WACPY,EAAS,gBACTC,EAAa,KAJjB,4BAUF,cAAC1D,EAAA,EAAD,UACE,mBACES,UAAU,QACVoC,QAAS,WACPY,EAAS,gBACTC,EAAa,KAJjB,4BAUF,cAAC1D,EAAA,EAAD,UACE,mBACES,UAAU,QACVoC,QAAS,WACPY,EAAS,gBACTC,EAAa,KAJjB,oCAcV,cAACzD,EAAA,EAAD,UACE,eAACD,EAAA,EAAD,WACE,cAAC4C,EAAA,EAAD,CACElC,QAAQ,OACRD,UAAU,SACVwD,KAAK,SACLI,SAAUjC,EAAK9B,OAAO,EACtBuC,QAAS,SAACyB,GAAD,OACPnF,EAAMoF,aAAa,CACjBnC,KAAMA,EACNrC,KAAMoD,EAASqB,KAAI,SAACC,GAClB,OAAOA,EAAKvB,SAEdZ,MAAOA,EACPP,UAAWA,KAZjB,8BAiBU,eCnIP,MAA0B,uCCA1B,MAA0B,iCCQ1B2C,MALf,WAEE,OAAO,qBAAKC,IAAKC,EAAMC,IAAI,U,iBCgHdC,MA3Gf,WACE,IAAMC,EAAc9B,EAAQ,IAC5B,EAA8B7D,oBAAS,GAAvC,mBAAO4F,EAAP,KAAiBC,EAAjB,KACA,EAA8B7F,mBAAS,CAAC,KAAxC,mBAAO0C,EAAP,KAAmBoD,EAAnB,KACA,EAAkC9F,mBAAS,CAAC,KAA5C,mBAAOqD,EAAP,KAAqB0C,EAArB,KACA,EAA8B/F,oBAAS,GAAvC,mBAAOgG,EAAP,KAAgBC,EAAhB,KAyCA,OAvCAC,OAAOC,OAAS,WACTD,OAAOE,SAASC,OACnBH,OAAOE,SAAWF,OAAOE,SAAW,UACpCF,OAAOE,SAASE,WAqClB,sBACEjF,UAAU,MACVuB,MAAO,CACL2D,gBAAgB,OAAD,OAASC,EAAT,KACfC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aANtB,UASE,mBAAGC,KAAK,uCAAR,SACE,cAACpD,EAAA,EAAD,CAAQlC,QAAQ,gBAAgBD,UAAU,iBAA1C,2BAKF,mBAAGuF,KAAK,4CAAR,SACE,cAACpD,EAAA,EAAD,CAAQlC,QAAQ,gBAAgBD,UAAU,kBAA1C,2BAKF,sBAAKA,UAAU,SAAf,UACE,gDACA,mBAAGuF,KAAK,IAAR,SACE,cAAC,EAAD,MAEF,uFAEDhB,EACC,cAAC,EAAD,CACElD,WAAYA,EACZW,aAAcA,EACdK,WAAY,kBAAMmC,GAAU,MAG9B,gCACGG,EACC,cAAC,IAAD,CACE3E,UAAU,SACVwF,KAAK,YACLC,MAAM,UACNxG,OAAQ,IACRD,MAAO,MAGT,6BAEF,cAAC,EAAD,CAAO8E,aAhFM,SAACzC,GAEpBoD,EAAQpD,GACRuD,GAAW,GAGX,IAAIc,EAAQpB,EAAYqB,UAAU,CAAEhE,KAAMN,EAAWM,OACrDiE,QAAQC,IAAIH,GACZ,IAAIpG,EAAOgF,EAAYqB,UAAU,CAAErG,KAAM+B,EAAW/B,OACpDsG,QAAQC,IAAIvG,GACZ,IAAIgC,EAAYgD,EAAYqB,UAAU,CACpCrE,UAAWD,EAAWC,YAExBsE,QAAQC,IAAIvE,GACZwE,MAAM,WAAD,OAAYJ,EAAZ,YAAqBpG,EAArB,YAA6BgC,IAC/ByE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAChE,GACL6C,GAAW,GACXF,EAAU3C,GAUVyC,GAAU,YAuDZ,qBAAKxE,UAAU,SAAf,SACE,+GChGOkG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a380443d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../App.css\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\n\nexport default function QuoteCard(props) {\n  const [liked, setLike] = useState(false);\n\n  const infoIcon = (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"13\"\n      height=\"13\"\n      fill=\"gray\"\n      class=\"bi bi-info-circle\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\n      <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\n    </svg>\n  );\n\n  const likeButton = liked ? (\n    <Col>\n      <Row>\n        <button className=\"like-button\" onClick={() => setLike(false)}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"red\"\n            className=\"bi bi-heart-fill\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n            />\n          </svg>\n        </button>\n      </Row>{\" \"}\n      <Row>\n        <p style={{ \"font-size\": \"12px\", \"margin-left\": \"0.2vh\" }}>\n          {props.likes + 1}\n        </p>\n      </Row>\n    </Col>\n  ) : (\n    <Col>\n      <Row>\n        <button className=\"like-button\" onClick={() => setLike(true)}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"red\"\n            className=\"bi bi-heart\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\" />\n          </svg>\n        </button>\n      </Row>\n      <Row>\n        <p style={{ \"font-size\": \"12px\", \"margin-left\": \"0.2vh\" }}>\n          {props.likes ? props.likes : 0}\n        </p>\n      </Row>\n    </Col>\n  );\n\n  const tags = [];\n  const categories_list = props.categories;\n  for (var i = 0; i < categories_list.length; i++) {\n    tags.push(\n      <Badge className=\"mr-1\" variant=\"info\" key={i}>\n        {categories_list[i]}\n      </Badge>\n    );\n  }\n\n  return (\n    <Card className=\"quote-card m-4\">\n      <Card.Body>\n        <Container>\n          <Row>\n            <Col xs={10}>\n              <blockquote className=\"blockquote m-2\">\n                <p>\n                  {'\"'} {props.quote} {'\"'}\n                </p>\n                <footer className=\"blockquote-footer\">{props.author}</footer>\n              </blockquote>\n              {tags}\n            </Col>\n            <Col className=\"mt-4\" xs={1}>\n              {/* {likeButton} */}\n              <Row>\n                <OverlayTrigger\n                  trigger=\"hover\"\n                  key={props.idx}\n                  placement={\"right\"}\n                  overlay={\n                    <Popover id={`popover-positioned-${props.idx}`}>\n                      <Popover.Title as=\"h3\">\n                        How is the score calculated?\n                      </Popover.Title>\n                      <Popover.Content>\n                        We calculated the score using this formula:{\" \"}\n                        <strong>\n                          x * ((normalized_like_counts + sentiment_score)/2) +\n                          (1-x) * similarity_score_by_LSI_model\n                        </strong>\n                        , where x is determined by the input \"emotional state\".\n                        For a more negative emotional state, we weigh the\n                        wholesomeness (like counts from Goodreads and sentiment\n                        score) of the quotes more so the results are more{\" \"}\n                        <i>comforting</i>. Otherwise we weigh the similarity\n                        more so the results are more <i>relatable</i>.<br />\n                        <strong>normalized likes:</strong>\n                        {props.n_likes}\n                        <br />\n                        <strong>sentiment:</strong>\n                        {props.sentiment}\n                        <br />\n                        <strong>similarity:</strong>\n                        {props.similarity}\n                        <br />\n                        <strong>wholesomeness weight:</strong>\n                        {props.searchInfo.wholesome}\n                        <br />\n                      </Popover.Content>\n                    </Popover>\n                  }\n                >\n                  <p style={{ \"font-size\": \"12px\", \"margin-left\": \"0.2vh\" }}>\n                    {\"Score: \" + props.rank_score.toFixed(2)} {infoIcon}\n                  </p>\n                </OverlayTrigger>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\n\nfunction ResultBar(props) {\n  const tags = [];\n  for (var i = 0; i < props.searchInfo.tags.length; i++) {\n    tags.push(\n      <Badge className=\"mr-1\" variant=\"info\" key={i}>\n        {props.searchInfo.tags[i]}\n      </Badge>\n    );\n  }\n  return (\n    <Container className=\"output-query-container\" style={{ width: \"80%\" }}>\n      <Row>\n        <Col xs={4}>\n          <h3>Your Search:</h3>\n        </Col>\n        <Col xs={6}>\n          <Row>\n            <Col>{props.searchInfo.text}</Col>\n          </Row>\n          <Row className=\"mt-4\">\n            <Col>\n              <h3>{tags}</h3>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col xs={2}>\n          <p style={{ fontSize: \"3vw\" }}>{props.searchInfo.emoji} </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ResultBar;\n","import \"./App.css\";\nimport React from \"react\";\nimport QuoteCard from \"./Components/QuoteCard\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ResultBar from \"./Components/ResultBar\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Output(props) {\n  const data = props.searchResult;\n  const cards = [];\n  for (var i = 0; i < data.length; i++) {\n    cards.push(\n      <QuoteCard\n        key={i}\n        searchInfo={props.searchInfo}\n        quote={data[i].quote}\n        author={data[i].author}\n        categories={data[i].tags}\n        likes={data[i].likes}\n        similarity={data[i].similarity}\n        sentiment={data[i].sentiment}\n        rank_score={data[i].rank_score}\n        n_likes={data[i].normalized_likes}\n      />\n    );\n  }\n\n  return (\n    <Container>\n      <Row className=\"mt-4 mb-2\">\n        <ResultBar searchInfo={props.searchInfo} />\n      </Row>\n      <Row>\n        <Button\n          variant=\"outline-light\"\n          className=\"button\"\n          onClick={() => props.handleBack()}\n        >\n          Back to Search\n        </Button>\n      </Row>\n      <Row className=\"m-5\">\n        <Col>{cards} </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Output;\n","import React, { useState } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\n\n\nfunction TagSelect(props) { \n  var data = require('./tag.json');\n  const options = data;\n\n  return (\n    <div>\n      <p className=\"text\">Choose some relevant tags for your quote:</p>\n\n      {/* TODO: Extract tags selected */}\n      <MultiSelect\n        options={options}\n        value={props.selected}\n        onChange={props.setSelected}\n        labelledBy=\"Select\"\n      />\n    </div>\n  );\n};\n\nexport default TagSelect;\n","import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TagSelect from \"./Components/TagSelect.js\";\n\nfunction Input(props) {\n  const [selected, setSelected] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [emoji, setEmoji] = useState(\"\");\n  const [wholesome, setWholesome] = useState(0);\n\n  return (\n    <Container className=\"input\">\n      <Form className=\"input-container\">\n\n          <Row className=\"feeling\">\n            <Col>\n              <Form.Group controlId=\"feelingDescription\">\n                <Form.Label className=\"text\">What's on your mind?</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  name=\"feelingInput\"\n                  value={text}\n                  placeholder=\"School is stressful...\"\n                  onChange={({ target: { value } }) => {\n                    setText(value);\n                  }}\n                />\n                <Form.Text className=\"text-muted\">\n                  Feeling troubled by anything? Tell us about it :)\n                </Form.Text>\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <Row className=\"tags\">\n            <Col>\n              <TagSelect selected={selected} setSelected={setSelected} />\n            </Col>\n          </Row>\n\n          <Row className=\"moodbar\">\n            <Col>\n              <Form.Group controlId=\"moodRange\">\n                <p className=\"text\">\n                  {\"Indicate your emotional state: \" + emoji}\n                </p>\n              </Form.Group>\n              <Row className=\"emoji-row\">\n                <Col>\n                  <p\n                    className=\"emoji\"\n                    onClick={() => {\n                      setEmoji(\"😐\");\n                      setWholesome(0.1);\n                    }}\n                  >\n                    😐\n                  </p>\n                </Col>\n                <Col>\n                  <p\n                    className=\"emoji\"\n                    onClick={() => {\n                      setEmoji(\"🙁\");\n                      setWholesome(0.2);\n                    }}\n                  >\n                    🙁\n                  </p>\n                </Col>\n                <Col>\n                  <p\n                    className=\"emoji\"\n                    onClick={() => {\n                      setEmoji(\"😢\");\n                      setWholesome(0.3);\n                    }}\n                  >\n                    😢\n                  </p>\n                </Col>\n                <Col>\n                  <p\n                    className=\"emoji\"\n                    onClick={() => {\n                      setEmoji(\"😰\");\n                      setWholesome(0.4);\n                    }}\n                  >\n                    😰\n                  </p>\n                </Col>\n                <Col>\n                  <p\n                    className=\"emoji\"\n                    onClick={() => {\n                      setEmoji(\"😭\");\n                      setWholesome(0.5);\n                    }}\n                  >\n                    😭\n                  </p>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n\n        <Row>\n          <Col>\n            <Button\n              variant=\"info\"\n              className=\"button\"\n              name=\"submit\"\n              disabled={text.length<1}\n              onClick={(e) =>\n                props.handleSubmit({\n                  text: text,\n                  tags: selected.map((item) => {\n                    return item.value;\n                  }),\n                  emoji: emoji,\n                  wholesome: wholesome,\n                })\n              }\n            >\n              Find Your Quotes\n            </Button>{\" \"}\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n}\nexport default Input;\n","export default __webpack_public_path__ + \"static/media/background.f858494b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.e8398315.png\";","import React from 'react';\nimport logo from './logo.png';\n\nfunction Logo() {\n  // source: https://www.pngitem.com/pimgs/m/149-1493077_cute-dog-face-clip-art-transparent-background-cute.png\n  return <img src={logo} alt=\"Logo\" />;\n}\n\nexport default Logo;","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Output from \"./Output\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Input from \"./input.js\";\nimport background from \"./background.jpg\";\nimport Logo from \"./Components/Logo.js\";\nimport Button from \"react-bootstrap/Button\";\nimport Loader from \"react-loader-spinner\";\n\nfunction App() {\n  const queryString = require(\"query-string\");\n  const [isOutput, setOutput] = useState(false);\n  const [searchInfo, setInfo] = useState([{}]);\n  const [searchResult, setResult] = useState([{}]);\n  const [loading, setLoading] = useState(false);\n\n  window.onload = function () {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n\n  const handleSubmit = (searchInfo) => {\n    //modify searchInfo here\n    setInfo(searchInfo);\n    setLoading(true);\n\n    //SVD\n    var query = queryString.stringify({ text: searchInfo.text });\n    console.log(query);\n    var tags = queryString.stringify({ tags: searchInfo.tags });\n    console.log(tags);\n    var wholesome = queryString.stringify({\n      wholesome: searchInfo.wholesome,\n    });\n    console.log(wholesome);\n    fetch(`/search?${query}&${tags}&${wholesome}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLoading(false);\n        setResult(data);\n        /*[{quote: string, \n        author: string, \n        tags: [string], \n        likes: number, \n        similarity: number,\n        sentiment: number,\n        rank_score: number,\n        normalized_like: number,\n        DocIdx: number}]*/\n        setOutput(true);\n      });\n  };\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage: `url(${background})`,\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <a href=\"https://quolesome-ness.herokuapp.com\">\n        <Button variant=\"outline-light\" className=\"button version\">\n          Prototype 1\n        </Button>\n      </a>\n\n      <a href=\"https://quolesome-ness-ms4.herokuapp.com/\">\n        <Button variant=\"outline-light\" className=\"button version2\">\n          Prototype 2\n        </Button>\n      </a>\n\n      <div className=\"header\">\n        <h1>QUOLESOME-NESS</h1>\n        <a href=\"/\">\n          <Logo />\n        </a>\n        <p>Feeling down? Let's find you some wholesome quotes!</p>\n      </div>\n      {isOutput ? (\n        <Output\n          searchInfo={searchInfo}\n          searchResult={searchResult}\n          handleBack={() => setOutput(false)}\n        />\n      ) : (\n        <div>\n          {loading ? (\n            <Loader\n              className=\"loader\"\n              type=\"ThreeDots\"\n              color=\"#2fd5eb\"\n              height={200}\n              width={200}\n            />\n          ) : (\n            <></>\n          )}\n          <Input handleSubmit={handleSubmit} />\n        </div>\n      )}\n      <div className=\"footer\">\n        <p>\n          Created by: Amber Zheng, Anya Ji, Eunice Zhang, Kai Zou, Vrushali\n          Samant\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}